{"version":3,"sources":["components/Roster/Roster.js","data/actions/state.js","components/Roster/index.js","components/Title/Letter.js","components/Title/Title.js","components/Title/index.js","components/GameForm/GameForm.js","axios.js","data/actions/api.js","components/GameForm/index.js","components/Player/Player.js","components/Player/index.js","components/Pairing/Pairing.js","components/Pairing/index.js","components/TournamentTree/TournamentTree.js","components/TournamentTree/index.js","components/MatchBox/MatchBox.js","components/MatchBox/index.js","components/Victory/Victory.js","components/Victory/index.js","components/FourOhFour/FourOhFour.js","components/Nav/Nav.js","components/Nav/index.js","components/LoadTournaments/LoadTournaments.js","components/LoadTournaments/index.js","components/Tournaments/Tournaments.js","components/Tournaments/index.js","components/MatrixBackground/MatrixLetters/MatrixLetter.js","components/MatrixBackground/MatrixLetters/MatrixLetters.js","components/MatrixBackground/MatrixLetters/index.js","components/MatrixBackground/MatrixBackground.js","components/MatrixBackground/index.js","components/App/App.js","components/App/index.js","reportWebVitals.js","data/reducers.js","data/initial.js","data/store.js","index.js"],"names":["Roster","players","deletePlayer","className","map","player","index","onClick","makeNewGames","newPlayers","won","score","half","Math","floor","length","player1s","slice","name","player2s","connect","state","dispatch","data","type","Letter","props","componentDidMount","direction","ceil","random","duration","setState","this","style","animation","letter","Component","Title","GameForm","errorTexts","invalidName","tooFewPlayers","unevenPlayers","tooManyPlayers","validateName","errors","validatePlayers","handleNameInput","e","nameInput","currentTarget","value","playerName","handlePlayerCreate","createPlayer","handleSubmit","preventDefault","rosterList","startGame","createRandomPlayers","counter","randomIndex","RandomNames","prevProps","prevState","gameStarted","to","onSubmit","action","method","htmlFor","onChange","id","Object","keys","error","axios","create","baseURL","headers","Accept","authorization","newGames","rounds","games","complete","idCounter","newRoundGames","i","push","round_id","player1","player2","deuce","service","post","then","tournament","newTournament","round","filter","game","game_id","currentRound","currentGame","beginTournament","increaseScore","put","tournamentID","roundID","gameID","playerID","adversary","console","log","meta","debounce","time","updateScore","completeMatch","match","finishMatch","endRound","updatedGame","newPlayer1s","newPlayer2s","finishRound","endTournament","tournament_id","winner","champion","lastRound","finishTournament","loaded","newPlayer","Player","inputDisabled","disableButtons","disabled","Pairing","winMessages","0","1","2","TournamentTree","roundName","display","flexDirection","MatchBox","nextMatch","calculateTitle","totalMatches","currentMatch","totalRounds","currentRoundID","forEach","currentRoundName","bind","gameConcluded","player1or2","Victory","reset","FourOhFour","Nav","LoadTournaments","handleLoad","width","get","tournaments","loadTournaments","Tournaments","date","tournamentLoaded","tIndex","updated_at","MatrixLetter","animationStyle","animationSpeed","MatrixLetters","LettersArray","numberOfLetters","newLetters","newDuration","newVictoryDuration","letters","victoryDuration","onAnimationEnd","setupLetterStyle","setupLetterSpeed","MatrixBackground","split","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","startNewMatch","nextRound","setupNewRound","initial","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createDebounce","persistState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"om5CA8BeA,EA5BA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACvB,OACI,sBAAKC,UAAU,kBAAf,UACI,oBAAIA,UAAU,iBAAd,2BACA,kCACI,gCACI,qBAAIA,UAAU,sBAAd,UACI,oBAAIA,UAAU,uBAAd,iBACA,oBAAIA,UAAU,yBAAd,kBACA,oBAAIA,UAAU,kCAGtB,gCACKF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACT,qBAAgBH,UAAU,oBAA1B,UACI,6BAAKG,EAAQ,IACb,6BAAKD,IACL,oBAAIF,UAAU,qCAAd,SACI,wBAAQI,QAAS,kBAAML,EAAaI,IAAQH,UAAU,iCAAtD,wBAJCG,e,QC6H3BE,EAAe,SAACC,GAGlB,IAAIR,EAAUQ,EAAWL,KAAI,SAACC,EAAQC,GAAT,mBAAC,eAAwBD,GAAzB,IAAiCK,IAAK,EAAGC,MAAO,OAGzEC,EAAOC,KAAKC,MAAMb,EAAQc,OAAS,GAIvC,MAAO,CAAEC,SAHMf,EAAQgB,MAAM,EAAGL,GAAMR,KAAI,SAAAC,GAAM,OAAIA,EAAOa,QAGxCC,SAFJlB,EAAQgB,MAAML,EAAMX,EAAQc,QAAQX,KAAI,SAAAC,GAAM,OAAIA,EAAOa,UCrI7DE,eAZS,SAAAC,GACpB,MAAO,CACHpB,QAASoB,EAAMpB,YAII,SAAAqB,GACvB,MAAO,CACHpB,aAAc,SAACqB,GAAD,OAAUD,EDqCJ,SAACC,GAEzB,MAAO,CACHC,KAAM,gBACNlB,MAAOiB,GCzC0BrB,CAAaqB,QAIvCH,CAA6CpB,GCqC7CyB,G,wDAhDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,kBAAoB,WAEhB,IAAIC,EAAYf,KAAKgB,KAAK,EAAAhB,KAAKiB,SAAqB,GAC9CC,EAAWlB,KAAKC,MAAM,EAAAD,KAAKiB,SAAqB,GAEpC,IAAdF,IACAA,EAAY,OAEE,IAAdA,IACAA,EAAY,SAEE,IAAdA,IACAA,EAAY,UAEE,IAAdA,IACAA,EAAY,QAGhB,EAAKI,SAAS,CACVD,SAAUA,EACVH,UAAWA,KA1Bf,EAAKP,MAAQ,CACTU,SAAU,EACVH,UAAW,QAJA,E,0CAgCnB,WAAU,IAAD,EAE2BK,KAAKZ,MAA7BO,EAFH,EAEGA,UAAWG,EAFd,EAEcA,SAEnB,OACI,mCACI,mBAAGG,MAAO,CACNC,UAAU,GAAD,OAAKP,EAAL,YAAkBG,EAAlB,kBACV5B,UAAU,gBAFb,SAGK8B,KAAKP,MAAMU,e,GA3CXC,cC4CNC,E,kDAzCX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IAEDL,MAAQ,GAHE,E,0CAyBnB,WAII,OACI,mCACI,qBAAKlB,UAAU,iBAAf,SAJM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAK/BC,KAAI,SAACgC,EAAQ9B,GAAT,OACP,cAAC,EAAD,CAAoB8B,OAAQA,GAAf9B,c,GAnCjB+B,aCSLjB,eAVS,SAAAC,GACpB,MAAO,MAIgB,SAAAC,GACvB,MAAO,KAIIF,CAA6CkB,GC0H7CC,E,kDA9HX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IASVc,WAAa,CACTC,YAAa,kDACbC,cAAe,kDACfC,cAAe,mEACfC,eAAgB,uDAdD,EA0BnBC,aAAe,SAAC3B,GAAD,OAAU,EAAKc,SAAS,CACnCc,OAAO,2BACA,EAAKzB,MAAMyB,QADZ,IAEFL,YAAavB,EAAKH,QAAU,GAAKG,EAAKH,QAAU,QA7BrC,EAiCnBgC,gBAAkB,SAAC9C,GAAD,OAAa,EAAK+B,SAAS,CACzCc,OAAO,2BACA,EAAKzB,MAAMyB,QADZ,IAEFJ,cAAezC,EAAQc,QAAU,EACjC4B,cAAe1C,EAAQc,QAAsD,KAA3Cd,EAAQc,OAAUd,EAAQc,OAAS,QArC1D,EAyCnBiC,gBAAkB,SAACC,GACf,IAAMC,EAAYD,EAAEE,cAAcC,MAClC,EAAKP,aAAaK,GAClB,EAAKlB,SAAS,CACVqB,WAAYH,KA7CD,EAiDnBI,mBAAqB,SAACL,GAEb,EAAK5B,MAAMyB,OAAOL,aAAyC,KAA1B,EAAKpB,MAAMgC,aAC7C,EAAK3B,MAAM6B,aAAa,EAAKlC,MAAMgC,YACnC,EAAKN,gBAAgB,EAAKrB,MAAMzB,WArDrB,EAyDnBuD,aAAe,SAACP,GAGZ,GAFAA,EAAEQ,kBAEG,EAAKpC,MAAMyB,OAAOJ,gBAClB,EAAKrB,MAAMyB,OAAOF,iBAClB,EAAKvB,MAAMyB,OAAOH,cAAe,CAElC,EAAKX,SAAS,CACVqB,WAAY,KAIhB,IAAMK,EAAa,EAAKhC,MAAMzB,QAAQG,KAAI,SAACC,EAAQC,GAAT,MAAoB,CAC1DY,KAAMb,EACNM,MAAO,EACPD,IAAK,MAGT,EAAKgB,MAAMiC,UAAUD,KA3EV,EA+EnBE,oBAAsB,SAACX,GAKnB,IAJA,IAAMM,EAAe,EAAK7B,MAAM6B,aAE5BM,EAAU,EAEPA,EAAU,GAAG,CAChB,IAAMC,EAAcjD,KAAKC,MAAMD,KAAKiB,SAAWiC,EAAYhD,QAC3DwC,EAAaQ,EAAYD,IACzBD,GAAW,IApFf,EAAKxC,MAAQ,CACTgC,WAAY,GACZP,OAAQ,CAAEL,aAAa,EAAOC,eAAe,EAAMC,eAAe,IALvD,E,sDAiBnB,SAAmBqB,EAAWC,GACtBD,EAAU/D,UAAYgC,KAAKP,MAAMzB,UACjCgC,KAAKc,gBAAgBd,KAAKP,MAAMzB,SAChCgC,KAAKD,SAAS,CACVqB,WAAY,Q,oBAsExB,WAAU,IAAD,OACGa,EAAgBjC,KAAKP,MAArBwC,YADH,EAE0BjC,KAAKZ,MAA5BgC,EAFH,EAEGA,WAAYP,EAFf,EAEeA,OAEpB,OAGIoB,EAAc,cAAC,IAAD,CAAUC,GAAG,SACvB,mCACI,sBAAKhE,UAAU,YAAf,UACI,cAAC,EAAD,IACA,sBAAMiE,SAAUnC,KAAKuB,aAAca,OAAO,GAAGC,OAAO,MAAMnE,UAAU,WAApE,SACI,sBAAKA,UAAU,kBAAf,UAEI,uBAAOA,UAAU,kBAAkBoE,QAAQ,OAA3C,iCAEA,uBAAOnB,MAAOC,EAAYmB,SAAUvC,KAAKe,gBAAiBxB,KAAK,OAAOrB,UAAU,kBAAkBe,KAAK,OAAOuD,GAAG,SAEjH,wBAAQjD,KAAK,SAASjB,QAAS0B,KAAKqB,mBAAoBnD,UAAU,mBAAlE,wBAEA,wBAAQqB,KAAK,SAASjB,QAAS0B,KAAK2B,oBAAqBzD,UAAU,mBAAnE,kCAEA,wBAAQqB,KAAK,SAASrB,UAAU,mBAAhC,iCAGCuE,OAAOC,KAAK7B,GAAQ1C,KAAI,SAACwE,EAAOtE,GAAR,OACpBwC,EAAO8B,GAAS,mBAAezE,UAAU,kBAAzB,SAA4C,EAAKqC,WAAWoC,IAApDtE,GAAkE,aAGvG,cAAC,EAAD,a,GA1HD+B,a,QCNRwC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,+DACTC,QAAS,CACLC,OAAQ,mBACRC,cAAe,MCOVvB,EAAY,SAAC1D,GAoBtB,IATA,IAAMkF,EAAW3E,EAAaP,GAG1BmF,EAAS,CAAC,CAAEX,GAAI,EAAGY,MAAOF,EAAUG,UAAU,IAG9CD,EAAQF,EAASpE,OACjBwE,EAAY,EAETF,EAAQ,GAAG,CACdA,GAAgB,EAKhB,IAFA,IAAIG,EAAgB,GAEXC,EAAI,EAAGA,EAAIJ,EAAOI,IACvBD,EAAcE,KAAK,CACfC,SAAUJ,EACVd,GAAIgB,EACJG,QAAS,GACTC,QAAS,GACTC,MAAO,EACPC,QAAS,EACTT,SAAU,IAIlBC,GAAa,EAEbH,EAAOM,KAAK,CAAEjB,GAAIc,EAAWF,MAAM,GAAD,OAAMG,GAAgBF,UAAU,IAKtE,OAAO,SAAChE,GAGJuD,EAAMmB,KAAK,eAAgB,CACvB,OAAS,eAAMZ,KAChBa,MAAK,YAAe,IAAZ1E,EAAW,EAAXA,KACPD,EP1CmB,SAACC,GAE5B,IAAM2E,EAAa3E,EAAK,GAClB6D,EAAM,YAAO7D,EAAK,IAClB8D,EAAK,YAAO9D,EAAK,IACjBtB,EAAO,YAAOsB,EAAK,IAEnB4E,EAAgB,CAClB1B,GAAIyB,EAAWzB,GACfW,OAAQA,EAAOhF,KAAI,SAAAgG,GAAK,kCACjBA,GADiB,IAEpBf,MAAOA,EAAMgB,QAAO,SAAAC,GAAI,OAAKA,EAAKX,WAAaS,EAAM3B,MAAKrE,KACrD,SAAAkG,GAAI,kCAAUA,GAAV,IAAgBrG,QAASA,EAAQoG,QAAO,SAAAhG,GAAM,OAAKA,EAAOkG,UAAYD,EAAK7B,gBAExFY,MAAOA,EAAMjF,KAAI,SAAAkG,GAAI,kCAAUA,GAAV,IAAgBrG,QAASA,EAAQoG,QAAO,SAAAhG,GAAM,OAAKA,EAAOkG,UAAYD,EAAK7B,YAG9F+B,EAAeL,EAAcf,OAAO,GACpCqB,EAAcN,EAAcd,MAAM,GAExC,MAAO,CACH7D,KAAM,mBACN0E,WAAW,eAAMC,GACjBK,aAAa,eAAMA,GACnBC,YAAY,eAAMA,IOkBLC,CAAgBnF,SAKxBoF,EAAgB,SAACpF,GAE1B,OAAO,SAACD,GACJuD,EAAM+B,IAAN,uBAA0BrF,EAAKsF,aAA/B,mBAAsDtF,EAAKuF,QAA3D,kBAA4EvF,EAAKwF,OAAjF,oBAAmGxF,EAAKyF,UAAxG,eACOzF,IACJ0E,MAAK,YAAe,IAAZ1E,EAAW,EAAXA,KACPD,EPjBe,SAACC,GAExB,IAAMlB,EAAM,eAAQkB,EAAK,IACnB0F,EAAS,eAAQ1F,EAAK,IACtB+E,EAAI,eAAQ/E,EAAK,IAIvB,OAFA2F,QAAQC,IAAI9G,GAEL,CACHmB,KAAM,iBACNnB,OAAQA,EACR4G,UAAWA,EACXX,KAAMA,EACNc,KAAM,CACFC,SAAU,CACNC,KAAM,OOEDC,CAAYhG,SAKpBiG,EAAgB,SAACjG,GAE1B,OAAO,SAACD,GACJuD,EAAM+B,IAAN,uBAA0BrF,EAAKsF,aAA/B,mBAAsDtF,EAAKuF,QAA3D,kBAA4EvF,EAAK+E,KAAK7B,IAAtF,eACOlD,EAAK+E,OACTL,MAAK,YAAe,IAAZ1E,EAAW,EAAXA,KACPD,EPPe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAE1B,MAAO,CACHC,KAAM,YACNiG,MAAM,eAAMlG,EAAK,IACjBtB,QAAQ,eAAMsB,EAAK,IACnB6F,KAAM,CACFC,SAAU,CACNC,KAAM,OODDI,CAAY,CAAEnG,eAKtBoG,EAAW,SAACpG,GAErB,OAAO,SAACD,GACJuD,EAAM+B,IAAN,uBAA0BrF,EAAKsF,aAA/B,mBAAsDtF,EAAKuF,SAA3D,2BACOvF,GADP,IAEIiF,aAAa,2BACNjF,EAAKiF,cADA,IAERnB,MAAO9D,EAAKiF,aAAanB,MAAMjF,KAAI,SAACkG,GAAD,OAAUA,EAAK7B,KAAOlD,EAAKqG,YAAYnD,GAA7B,eAAuClD,EAAKqG,aAA5C,eAAiEtB,WAEnHL,MAAK,YAAe,IAAZ1E,EAAW,EAAXA,KACPD,EPRe,SAACC,GAExB,IAAMiF,EAAY,eAAQjF,EAAKA,MAEzBd,EAAaD,EAAagG,EAAanB,MAAMjF,KAAI,SAAAkG,GAAI,OAA4B,IAAxBA,EAAKrG,QAAQ,GAAGS,IAAY4F,EAAKrG,QAAQ,GAAKqG,EAAKrG,QAAQ,OAEpHwG,EAAcD,EAAanB,MAAMmB,EAAanB,MAAMtE,OAAS,GAEnE,MAAO,CACHS,KAAM,YACNqG,YAAY,YAAKpH,EAAWO,UAC5B8G,YAAY,YAAKrH,EAAWU,UAC5BqF,aAAa,eAAMA,GACnBiB,MAAM,eAAMhB,GACZW,KAAM,CACFC,SAAU,CACNC,KAAM,OORDS,CAAYxG,SAKpByG,EAAgB,SAACzG,GAE1B,OAAO,SAACD,GACJuD,EAAM+B,IAAN,uBAA0BrF,EAAKsF,aAA/B,mBAAsDtF,EAAKuF,SAA3D,2BACOvF,GADP,IAEIiF,aAAa,2BACNjF,EAAKiF,cADA,IAERnB,MAAO9D,EAAKiF,aAAanB,MAAMjF,KAAI,SAACkG,GAAD,OAAUA,EAAK7B,KAAOlD,EAAKqG,YAAYnD,GAA7B,eAAuClD,EAAKqG,aAA5C,eAAiEtB,WAEnHL,MAAK,YAAe,IAAZ1E,EAAW,EAAXA,KAEP,OAAOsD,EAAM+B,IAAN,uBAA0BrF,EAAKA,KAAK0G,eAApC,eACA1G,EAAKA,OACT0E,MAAK,YAAe,IAAZ1E,EAAW,EAAXA,KACP,OAAOD,EPJS,SAACC,GAK7B,MAAO,CACHC,KAAM,iBACN0G,OALa3G,EAAK,GAAG4G,SAMrBC,UALW,eAAQ7G,EAAK,KOCA8G,CAAiB9G,YAM3Cf,EAAe,SAACC,GAGlB,IAAIR,EAAUQ,EAAWL,KAAI,SAACC,EAAQC,GAAT,mBAAC,eAAwBD,GAAzB,IAAiCK,IAAK,EAAGC,MAAO,OAGzEC,EAAOC,KAAKC,MAAMb,EAAQc,OAAS,GACnCC,EAAWf,EAAQgB,MAAM,EAAGL,GAC5BO,EAAWlB,EAAQgB,MAAML,EAAMX,EAAQc,QAW3C,OARkBC,EAASZ,KAAI,SAACwF,EAAStF,GAAV,MAAqB,CAChDsF,QAASA,EACTC,QAAS1E,EAASb,GAClBwF,MAAO,EACPC,QAAS,EACTT,SAAU,OCzHHlE,eAfS,SAAAC,GACpB,MAAO,CACHpB,QAASoB,EAAMpB,QACfiE,YAAa7C,EAAM6C,YACnBoE,OAAQjH,EAAMiH,WAIK,SAAAhH,GACvB,MAAO,CACHiC,aAAc,SAAChC,GAAD,OAAUD,ERFJ,SAACC,GACzB,MAAO,CACHC,KAAM,gBACN+G,UAAWhH,GQDsBgC,CAAahC,KAC9CoC,UAAW,SAACpC,GAAD,OAAUD,EAASqC,EAAUpC,QAIjCH,CAA6CmB,G,QCD7CiG,G,YAjBA,SAAC,GAA8D,IAA5DnI,EAA2D,EAA3DA,OAAQsG,EAAmD,EAAnDA,cAAe8B,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAOpD,OACI,sBAAKvI,UAAU,kBAAf,UACI,6BAAKE,EAAOa,OACZ,sCACA,mBAAGf,UAAU,gBAAb,SAA8BE,EAAOM,QACrC,wBAAQgI,SAAUF,EAAelI,QAVrB,WAChBmI,IACA/B,EAActG,IAQ6CF,UAAU,iBAAjE,oBCEGiB,eAZS,SAAAC,GACpB,MAAO,CACHoH,cAAepH,EAAMoH,kBAIF,SAAAnH,GACvB,MAAO,CACHoH,eAAgB,kBAAMpH,EV0HnB,CACHE,KAAM,wBUvHCJ,CAA6CoH,GCkB7CI,G,YAhCC,SAAC,GAAc,IAAZtC,EAAW,EAAXA,KAETuC,EAAc,CAChBC,EAAG,KACHC,EAAG,MACHC,EAAG,QAGP,OAGI,gCACI,kCACI,qBAAI7I,UACwB,IAAxBmG,EAAKrG,QAAQ,GAAGS,IAAY,sBACJ,IAAxB4F,EAAKrG,QAAQ,GAAGS,IAAY,uBAAyB,kBAFzD,UAGI,oBAAIP,UAAU,gBAAd,SAA+BmG,EAAKrG,QAAQ,GAAGiB,OAC/C,oBAAIf,UAAU,iBAAd,SAAgCmG,EAAKrG,QAAQ,GAAGU,QAChD,oBAAIR,UAAU,eAAd,SAA8B0I,EAAYvC,EAAKrG,QAAQ,GAAGS,UAE9D,qBAAIP,UACwB,IAAxBmG,EAAKrG,QAAQ,GAAGS,IAAY,sBACJ,IAAxB4F,EAAKrG,QAAQ,GAAGS,IAAY,uBAAyB,kBAFzD,UAGI,oBAAIP,UAAU,gBAAd,SAA+BmG,EAAKrG,QAAQ,GAAGiB,OAC/C,oBAAIf,UAAU,iBAAd,SAAgCmG,EAAKrG,QAAQ,GAAGU,QAChD,oBAAIR,UAAU,eAAd,SAA8B0I,EAAYvC,EAAKrG,QAAQ,GAAGS,iBCnB/DU,eALS,SAAAC,GACpB,MAAO,KAIID,CAAyBwH,GCwBzBK,EA7BQ,SAAC,GAAoC,IAAlC/E,EAAiC,EAAjCA,YAAoBkB,GAAa,EAApBC,MAAoB,EAAbD,QAGpC8D,EAAY,SAAC5I,EAAOS,GAAR,OACdT,IAAUS,EAAS,QACfT,IAAUS,EAAS,EAAI,cACnBT,IAAUS,EAAS,EAAI,iBAAvB,gBAAmDT,IAI/D,OACI4D,EACI,qBAAK/D,UAAU,iBAAf,SACKiF,EAAOhF,KAAI,SAACgG,EAAO9F,GAAR,OACR,qBAAiB4B,MAAO,CAAEiH,QAAS,OAAQC,cAAe,UAA1D,SACI,sBAAKjJ,UAAU,aAAf,UACI,oBAAIA,UAAU,oBAAd,SAAmC+I,EAAU5I,EAAQ,EAAG8E,EAAOrE,UAC9DqF,EAAMf,MAAMjF,KAAI,SAACkG,EAAMhG,GAAP,OACb,cAAC,EAAD,CAASgG,KAAMA,GAAWhG,UAJ5BA,QAWlB,8BCjBGc,eARS,SAAAC,GACpB,MAAO,CACH6C,YAAa7C,EAAM6C,YACnBmB,MAAOhE,EAAMgE,MACbD,OAAQ/D,EAAM+D,UAIPhE,CAAyB6H,GCyIzBI,E,kDA5IX,WAAY3H,GAAQ,IAAD,8BACf,cAAMA,IAsCV8F,cAAgB,WAAO,IAAD,EAG8E,EAAK9F,MAA7F+E,EAHU,EAGVA,YAAaD,EAHH,EAGGA,aAAcK,EAHjB,EAGiBA,aAAcc,EAH/B,EAG+BA,SAAUvC,EAHzC,EAGyCA,OAAQ4C,EAHjD,EAGiDA,cAAesB,EAHhE,EAGgEA,UAE5E1B,EAAW,eAAQnB,GACzBmB,EAAY3H,QAAQ,GAAGS,IAAM,EAC7BkH,EAAY3H,QAAQ,GAAGS,IAAM,EAE7B8F,EAAa/B,KAAOW,EAAOA,EAAOrE,OAAS,GAAG0D,IAAMgC,EAAYhC,KAAO+B,EAAanB,MAAMmB,EAAanB,MAAMtE,OAAS,GAAG0D,GACrHuD,EAAc,CACVxB,aAAcA,EACdoB,YAAaA,EACbf,aAAcA,EACdC,QAASN,EAAa/B,KAE1BgC,EAAYhC,KAAO+B,EAAanB,MAAMmB,EAAanB,MAAMtE,OAAS,GAAG0D,GACjEkD,EAAS,CACLnB,aAAcA,EACdoB,YAAaA,EACbf,aAAcA,EACdC,QAASN,EAAa/B,KAE1B6E,EAAU,CACNhD,KAAMsB,EACNf,aAAcA,EACdC,QAASN,EAAa/B,MAjEnB,EAqEnB8E,eAAiB,WACb,IAAIC,EAAe,EAAK9H,MAAM8E,aAAanB,MAAMtE,OAC7C0I,EAAe,EAEfC,EAAc,EAAKhI,MAAM0D,OAAOrE,OAChC4I,EAAiB,EAErB,EAAKjI,MAAM0D,OAAOwE,SAAQ,SAACxD,EAAO9F,GAC1B,EAAKoB,MAAM8E,aAAa/B,KAAO2B,EAAM3B,KACrCkF,EAAiBrJ,EAAQ,EACzB8F,EAAMf,MAAMuE,SAAQ,SAACtD,EAAMhG,GACnB,EAAKoB,MAAM+E,YAAYhC,KAAO6B,EAAK7B,KACnCgF,EAAenJ,EAAQ,UAMvC,IAAIuJ,EAAmBF,IAAmBD,EAAc,QACpDC,IAAmBD,EAAc,EAAI,cACjCC,IAAmBD,EAAc,EAAI,iBAArC,gBAAiEC,GAEzE,MAA4B,UAArBE,EAAA,UACAA,GADA,UAEAA,EAFA,mBAE2BJ,EAF3B,YAE2CD,IA1FlD,EAAKhC,cAAgB,EAAKA,cAAcsC,KAAnB,gBAHN,E,sDAMnB,WAAsB,IAAD,EAE8G7H,KAAKP,MAA5HgH,EAFS,EAETA,eAAgBjC,EAFP,EAEOA,YAAaD,EAFpB,EAEoBA,aAAcK,EAFlC,EAEkCA,aAAcc,EAFhD,EAEgDA,SAAUvC,EAF1D,EAE0DA,OAAQ4C,EAFlE,EAEkEA,cAAesB,EAFjF,EAEiFA,UAAWS,EAF5F,EAE4FA,cAE7G,IAAoC,IAA/BtD,EAAYxG,QAAQ,GAAGS,KAA4C,IAA/B+F,EAAYxG,QAAQ,GAAGS,OAAeqJ,EAAe,CAE1FrB,IAEA,IAAMd,EAAW,eAAQnB,GAEzBD,EAAa/B,KAAOW,EAAOA,EAAOrE,OAAS,GAAG0D,IAAMgC,EAAYhC,KAAO+B,EAAanB,MAAMmB,EAAanB,MAAMtE,OAAS,GAAG0D,GACrHuD,EAAc,CACVxB,aAAcA,EACdoB,YAAaA,EACbf,aAAcA,EACdC,QAASN,EAAa/B,KAE1BgC,EAAYhC,KAAO+B,EAAanB,MAAMmB,EAAanB,MAAMtE,OAAS,GAAG0D,GACjEkD,EAAS,CACLnB,aAAcA,EACdoB,YAAaA,EACbf,aAAcA,EACdC,QAASN,EAAa/B,KAE1B6E,EAAU,CACNhD,KAAMsB,EACNf,aAAcA,EACdC,QAASN,EAAa/B,Q,oBA+D1C,WAAU,IAAD,SAE6ExC,KAAKP,MAA/EiF,EAFH,EAEGA,cAAeF,EAFlB,EAEkBA,YAAaD,EAF/B,EAE+BA,aAAcK,EAF7C,EAE6CA,aAElD,OAJK,EAE2DkD,cAG5C,cAAC,IAAD,CAAU5F,GAAG,YACzB,sBAAKhE,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,mBAAd,SAAkC8B,KAAKsH,mBACvC,sBAAKpJ,UAAU,oBAAf,UACI,cAAC,EAAD,CAAQwG,cAAe,SAACtG,GAAD,OAAYsG,EAAc,CAC7CqD,WAAY,EACZ3J,OAAQA,EACRiG,KAAMG,EACNI,aAAcA,EACdC,QAASN,EAAa/B,GACtBsC,OAAQ1G,EAAOkG,QACfS,SAAU3G,EAAOoE,MACjBpE,OAAQoG,EAAYxG,QAAQ,KAChC,mBAAGE,UAAU,mBAAb,gBACA,cAAC,EAAD,CAAQwG,cAAe,SAACtG,GAAD,OAAYsG,EAAc,CAC7CqD,WAAY,EACZ3J,OAAQA,EACRiG,KAAMG,EACNI,aAAcA,EACdC,QAASN,EAAa/B,GACtBsC,OAAQ1G,EAAOkG,QACfS,SAAU3G,EAAOoE,MACjBpE,OAAQoG,EAAYxG,QAAQ,QAEpC,sBAAKE,UAAU,uBAAf,UACI,mBAAGA,UAAU,kBAAb,SAAwD,IAAxBsG,EAAYV,QAAgB,UAAY,KACxE,mBAAG5F,UAAU,yBAAb,SAA6D,IAAtBsG,EAAYX,MAAc,QAAU,KAC3E,mBAAG3F,UAAU,kBAAb,SAAwD,IAAxBsG,EAAYV,QAAgB,UAAY,QAE5E,wBAAQ5F,UAAU,mBAAmBI,QAAS,kBAAM,EAAKiH,iBAAzD,oCAEJ,cAAC,EAAD,W,GAvIGnF,aCoBRjB,eArBS,SAAAC,GACpB,MAAO,CACHwF,aAAcxF,EAAMwF,aACpBL,aAAcnF,EAAMmF,aACpBC,YAAapF,EAAMoF,YACnBvC,YAAa7C,EAAM6C,YACnB6F,cAAe1I,EAAM0I,cACrB3E,OAAQ/D,EAAM+D,WAIK,SAAA9D,GACvB,MAAO,CACHqF,cAAe,SAACpF,GAAD,OAAUD,EAASqF,EAAcpF,KAChD+H,UAAW,SAAC/H,GAAD,OAAUD,EAASkG,EAAcjG,KAC5CoG,SAAU,SAACpG,GAAD,OAAUD,EAASqG,EAASpG,KACtCyG,cAAe,SAACzG,GAAD,OAAUD,EAAS0G,EAAczG,KAChDmH,eAAgB,kBAAMpH,EhBgHnB,CACHE,KAAM,wBgB7GCJ,CAA6CiI,GCV7CY,G,MAZC,SAAC,GAAqC,EAAnC9B,SAAoC,IAA1BjE,EAAyB,EAAzBA,YAAyB,EAAZgG,MAEtC,OACKhG,EACG,mCACI,qBAAK/D,UAAU,gBAFR,cAAC,IAAD,CAAUgE,GAAG,OCUrB/C,eAbS,SAAAC,GACpB,MAAO,CACH8G,SAAU9G,EAAM8G,SAChBjE,YAAa7C,EAAM6C,gBAIA,SAAA5C,GACvB,MAAO,CACH4I,MAAO,SAAC3I,GAAD,OAAUD,ElBmHd,CACHE,KAAM,mBkBhHCJ,CAA6C6I,GCF7CE,G,MAZI,WAEf,OACI,mCACI,sBAAKhK,UAAU,YAAf,UACI,mBAAGA,UAAU,cAAb,iCACA,mBAAGA,UAAU,cAAb,4GACA,cAAC,IAAD,CAAMA,UAAU,gBAAgBgE,GAAG,GAAnC,4BCIDiG,G,MAXH,SAAC,GAAa,IAAZF,EAAW,EAAXA,MAEV,OACI,mCACI,sBAAK/J,UAAU,eAAf,UACI,cAAC,IAAD,CAAMI,QAAS,kBAAM2J,KAAS/J,UAAU,YAAYgE,GAAG,IAAvD,4BACA,cAAC,IAAD,CAAMhE,UAAU,YAAYgE,GAAG,mBAA/B,uCCKD/C,eAVS,SAAAC,GACpB,MAAO,MAGgB,SAAAC,GACvB,MAAO,CACH4I,MAAO,SAAC3I,GAAD,OAAUD,ErBsHd,CACHE,KAAM,mBqBnHCJ,CAA6CgJ,GCU7CC,E,uKAnBX,WACSpI,KAAKP,MAAM4G,QACZrG,KAAKP,MAAM4I,e,oBAInB,WAEI,OADmBrI,KAAKP,MAAhB4G,OACQ,cAAC,IAAD,CAAUnE,GAAG,gBACzB,qBAAKhE,UAAU,WAAf,SACI,qBACIA,UAAU,2CACV+B,MAAO,CAAEqI,MAAO,gB,GAdNlI,aCSfjB,eARS,SAAC,GAAD,MAAiB,CACrCkH,OADoB,EAAGA,WAIA,SAAChH,GAAD,MAAe,CACtCgJ,WAAY,kBAAMhJ,GhBJX,SAACA,GACJuD,EAAM2F,IAAI,gBAAgBvE,MAAK,YAAe,IAAZ1E,EAAW,EAAXA,KAC9BD,EPPmB,SAACC,GAE5B,MAAO,CACHC,KAAM,mBACNiJ,YAAalJ,EAAK,IOGLmJ,CAAgBnJ,cgBKtBH,CAA6CiJ,GCgD7CM,G,wDAtDX,WAAYjJ,GAAQ,IAAD,8BACf,cAAMA,IAOVwH,UAAY,SAAC5I,EAAOS,GAAR,OACRT,IAAUS,EAAS,QACfT,IAAUS,EAAS,EAAI,cACnBT,IAAUS,EAAS,EAAI,iBAAvB,gBAAmDT,IAR3D,EAAKe,MAAQ,CACTuJ,KAAM,IAJK,E,qDAcnB,WACI3I,KAAKP,MAAMmJ,qB,oBAGf,WAAU,IAAD,OAEL,OACI,mCACI,qBAAK1K,UAAU,YAAf,SAGK8B,KAAKP,MAAM+I,YAAYrK,KAAI,SAAC8F,EAAY4E,GAAb,OAExB,sBAAkB3K,UAAU,sBAA5B,UACI,6CAAgB+F,EAAWzB,MAC3B,4BAAIyB,EAAW6E,aACf,qBAAK5K,UAAU,iBAAf,SACK+F,EAAWd,OAAOhF,KAAI,SAACgG,EAAO9F,GAAR,OACnB,qBAAiB4B,MAAO,CAAEiH,QAAS,OAAQC,cAAe,UAA1D,SACI,sBAAKjJ,UAAU,aAAf,UACI,oBAAIA,UAAU,oBAAd,SAAmC,EAAK+I,UAAU5I,EAAQ,EAAG4F,EAAWd,OAAOrE,UAC9EqF,EAAMf,MAAMjF,KAAI,SAACkG,EAAMhG,GAAP,OACb,cAAC,EAAD,CAASgG,KAAMA,GAAWhG,UAJ5BA,QAUlB,2CAAc4F,EAAWiC,cAfnB2C,c,GA7BRzI,cCYXjB,eAZS,SAAAC,GACpB,MAAO,CACHoJ,YAAapJ,EAAMoJ,gBAIA,SAAAnJ,GACvB,MAAO,CACHuJ,iBAAkB,kBAAMvJ,EzBJrB,CACHE,KAAM,2ByBOCJ,CAA6CuJ,GCO7CK,G,wDAlBX,WAAYtJ,GAAQ,IAAD,8BACf,cAAMA,IACDL,MAAQ,GAFE,E,0CAMnB,WAAU,IAAD,EAE6CY,KAAKP,MAA/CuJ,EAFH,EAEGA,eAAgBC,EAFnB,EAEmBA,eAAgB9I,EAFnC,EAEmCA,OAExC,OACI,mCACI,mBAAGF,MAAO,CAAEC,UAAU,GAAD,OAAK8I,EAAL,YAAuBC,EAAvB,yBAA+D/K,UAAU,iBAA9F,SAAgHiC,U,GAdrGC,cCmJZ8I,E,kDAhJX,WAAYzJ,GAAQ,IAAD,8BACf,cAAMA,IAUV0J,aAAe,CACX,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UApDe,EAuDnBzJ,kBAAoB,WAQhB,IANA,IAAM0J,EAAkBxK,KAAKC,MAAM,GAAAD,KAAKiB,SAAsB,GAExDwJ,EAAa,GAEfzH,EAAU,EAEPA,EAAUwH,GACbxH,GAAW,EACXyH,EAAW5F,KAAK,EAAK0F,aAAavK,KAAKC,MAAMD,KAAKiB,SAAW,EAAKsJ,aAAarK,UAGnF,IAAMwK,EAAc1K,KAAKC,MAAM,EAAAD,KAAKiB,SAAsB,GAEtD0J,EAAqB,EAED,YAApB,EAAK9J,MAAMF,OACXgK,EAAqB3K,KAAKC,MAAM,KAAAD,KAAKiB,SAA2B,OAGpE,EAAKE,SAAS,CACVyJ,QAASH,EACTvJ,SAAUwJ,EACVG,gBAAiBF,KA/EN,EAmFnBG,eAAiB,WAQb,IANA,IAAMN,EAAkBxK,KAAKC,MAAM,GAAAD,KAAKiB,SAAsB,GAExDwJ,EAAa,GAEfzH,EAAU,EAEPA,EAAUwH,GACbxH,GAAW,EACXyH,EAAW5F,KAAK,EAAK0F,aAAavK,KAAKC,MAAMD,KAAKiB,SAAW,EAAKsJ,aAAarK,UAGnF,EAAKiB,SAAS,CACVyJ,QAASH,KAjGE,EAqGnBM,iBAAmB,WAKf,OAJa/K,KAAKC,MAAM,GAAAD,KAAKiB,SAAuB,GAExB,GAAK,mBAAqB,mBAxGvC,EA6GnB+J,iBAAmB,WACf,OAAOhL,KAAKC,MAAM,EAAAD,KAAKiB,SAAqB,IA5G5C,EAAKT,MAAQ,CACTU,SAAU,EACV0J,QAAS,IAGb,EAAKI,iBAAmB,EAAKA,iBAAiB/B,KAAtB,gBACxB,EAAK8B,iBAAmB,EAAKA,iBAAiB9B,KAAtB,gBART,E,0CAiHnB,WAAU,IAAD,SAE0C7H,KAAKZ,MAA5CU,EAFH,EAEGA,SAAU2J,EAFb,EAEaA,gBAAiBD,EAF9B,EAE8BA,QAEnC,MACwB,YAApBxJ,KAAKP,MAAMF,KACP,mCACI,qBAAKrB,UAAU,qBAAf,SACI,sBAAK+B,MAAO,CAAEC,UAAU,qBAAD,OAAuBuJ,EAAvB,yBAAvB,UAEQD,EAAQrL,KAAI,SAACgC,EAAQ9B,GAAT,OACR,cAAC,EAAD,CAA0B2K,eAAgB,EAAKW,mBAAoBV,eAAgB,EAAKW,mBAAoBzJ,OAAQA,GAAjG9B,MAG3B,cAAC,EAAD,CAAc2K,eAAe,qBAAqBC,eAAgBjJ,KAAK4J,mBAAoBzJ,OAAQH,KAAKP,MAAMU,gBAI1H,mCACI,qBAAKF,MAAO,CAAEC,UAAU,cAAD,OAAgBJ,EAAhB,sBAA+C4J,eAAgB1J,KAAK0J,eAAgBxL,UAAU,oBAArH,SAEQsL,EAAQrL,KAAI,SAACgC,EAAQ9B,GAAT,OACR,cAAC,EAAD,CAA0B2K,eAAgB,EAAKW,mBAAoBV,eAAgB,EAAKW,mBAAoBzJ,OAAQA,GAAjG9B,c,GAzIvB+B,aCKbjB,gBANS,SAAC,GAAD,EAAGkH,OAAH,MAAiB,MAGd,SAAChH,GAAD,MAAe,KAG3BF,CAA6C+J,GCiK7CW,G,kDApKX,WAAYpK,GAAQ,IAAD,8BACf,cAAMA,IACDL,MAAQ,GAFE,E,0CAMnB,WAII,OACI,qBAAKlB,UAAU,mBAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACC8B,KAAKP,MAAMqI,cACR,sBAAK5J,UAAU,mCAAf,UACK8B,KAAKP,MAAMyG,SAAS4D,MAAM,IAAI3L,KAAI,SAACgC,EAAQ9B,GAAT,OAC/B,cAAC,GAAD,CAA2B8B,OAAQA,EAAQZ,KAAK,WAA5BlB,MAExB,cAAC,GAAD,CAAe8B,OAAO,IAAIZ,KAAK,YAC/B,cAAC,GAAD,CAAeY,OAAO,IAAIZ,KAAK,YAC/B,cAAC,GAAD,CAAeY,OAAO,IAAIZ,KAAK,YAC/B,cAAC,GAAD,CAAeY,OAAO,IAAIZ,KAAK,YAC/B,cAAC,GAAD,CAAeY,OAAO,IAAIZ,KAAK,YAC/B,cAAC,GAAD,CAAeY,OAAO,IAAIZ,KAAK,eAC1B,KAEb,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,a,GA/JWa,aCQhBjB,gBATS,SAACC,GAAD,MAAY,CAChC0I,cAAe1I,EAAM0I,cACrBzB,OAAQjH,EAAMiH,OACdH,SAAU9G,EAAM8G,aAGO,SAAC7G,GAAD,MAAe,KAG3BF,CAA6C0K,ICsB7CE,GAnBH,SAAC,GAAmC,EAAjCjC,cAAiC,EAAlB7F,YAC5B,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+H,OAAK,EAACC,KAAK,IAAIC,UAAW5J,IACjC,cAAC,IAAD,CAAO0J,OAAK,EAACC,KAAK,QAAQC,UAAW9C,IACrC,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,WAAWC,UAAWlC,IACxC,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,mBAAmBC,UAAW9B,IAChD,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,eAAeC,UAAWxB,IAC5C,cAAC,EAAD,aCjBKvJ,gBAPS,SAAAC,GACpB,MAAO,CACH0I,cAAe1I,EAAM0I,cACrB7F,YAAa7C,EAAM6C,eAIZ9C,CAAyB4K,ICEzBI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrG,MAAK,YAAkD,IAA/CsG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6BCuGCO,GAlCC,SAACvL,EAAOgD,GACpB,OAAQA,EAAO7C,MACX,IAAK,mBAAoB,OAAO,2BACzBH,GADkB,IAErBiH,QAAQ,EACRmC,YAAapG,EAAOoG,cAExB,IAAK,qBAAsB,OAAO,2BAAIpJ,GAAX,IAAkBiH,QAAQ,IACrD,IAAK,gBAAiB,OAAO,2BACtBjH,GADe,IAElBpB,QAAQ,GAAD,mBAAMoB,EAAMpB,SAAZ,CAAqBoE,EAAOkE,cAEvC,IAAK,gBAAiB,OAAO,2BACtBlH,GADe,IAElBpB,QAASoB,EAAMpB,QAAQoG,QAAO,SAAChG,EAAQoF,GAAT,OAAepB,EAAO/D,QAAUmF,OAElE,IAAK,mBAAoB,OAAO,2BACzBpE,GADkB,IAErB6C,aAAa,EACb2C,aAAcxC,EAAO6B,WAAWzB,GAChCW,OAAQf,EAAO6B,WAAWd,OAC1BoB,aAAcnC,EAAOmC,aACrBC,YAAapC,EAAOoC,cAExB,IAAK,iBAAkB,OApGT,SAACpF,EAAOgD,GAI1B,OAFAA,EAAOiC,KAAKrG,QAAZ,YAA0BoB,EAAMoF,YAAYxG,QAAQG,KAAI,SAACC,GAAD,OAAYA,EAAOoE,KAAOJ,EAAOhE,OAAOoE,GAA5B,eAAsCJ,EAAOhE,QAA7C,eAA6DgE,EAAO4C,eAEjI,2BACA5F,GADP,IAEIoH,eAAe,EACfrD,OAAQ/D,EAAM+D,OAAOhF,KAAI,SAACgG,GAAD,OACrBA,EAAM3B,KAAOpD,EAAMmF,aAAa/B,GAAhC,2BACOpD,EAAMmF,cADb,IAEInB,MAAOe,EAAMf,MAAMjF,KAAI,SAACkG,GAAD,OAAUA,EAAK7B,KAAOJ,EAAOiC,KAAK7B,GAAxB,eACxBJ,EAAOiC,MADiB,eACHA,QAHlC,eAISF,MACbK,YAAY,eACLpC,EAAOiC,QAsFgBK,CAActF,EAAOgD,GACnD,IAAK,YAAa,OA1CJ,SAAChD,EAAD,GAAgC,IAAtBoG,EAAqB,EAArBA,MAAOxH,EAAc,EAAdA,QAEnC,OAAO,2BACAoB,GADP,IAEIoH,eAAe,EACfrD,OAAQ/D,EAAM+D,OAAOhF,KAAI,SAACgG,GAAD,OAAWA,EAAM3B,KAAOgD,EAAM9B,SAAnB,2BAEzBS,GAFyB,IAElBf,MAAOe,EAAMf,MAAMjF,KAAI,SAACkG,GAAD,OAAUA,EAAK7B,KAAOgD,EAAMhD,GAAlB,2BACpCgD,GADoC,IAEvCxH,QAAQ,eAAMA,KAFyB,eAGlCqG,QALmB,eAOzBF,MACXK,YAAapF,EAAMmF,aAAanB,MAAMgB,QAAO,SAACC,GAAD,OAAUA,EAAK7B,KAAOgD,EAAMhD,GAAK,KAAG,KA6BxDoI,CAAcxL,EAAOgD,GAC9C,IAAK,YAAa,OAxEJ,SAAChD,EAAD,GAA+D,IAArDwG,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,YAAatB,EAA0B,EAA1BA,aAAciB,EAAY,EAAZA,MAE9DqF,EAAYzL,EAAM+D,OAAOiB,QAAO,SAACD,EAAO9F,GAAR,OAAkB8F,EAAM3B,KAAO+B,EAAa/B,GAAK,KAAG,GAGpFU,EAAW2H,EAAUzH,MAAMjF,KAAI,SAACkG,EAAMhG,GACxC,IAAML,EAAO,YAAOqG,EAAKrG,SAGzB,OAFAA,EAAQ,GAAGiB,KAAO2G,EAAYvH,GAC9BL,EAAQ,GAAGiB,KAAO4G,EAAYxH,GACvB,2BAAKgG,GAAZ,IAAkBrG,QAASA,OAG/B,OAAO,2BACAoB,GADP,IAEIoH,eAAe,EACfrD,OAAQ/D,EAAM+D,OAAOhF,KAAI,SAACgG,GAAD,OACrBA,EAAM3B,KAAOqI,EAAUrI,GAAvB,2BACSqI,GADT,IACoBzH,MAAM,YAAKF,KAC3BiB,EAAM3B,KAAOgD,EAAM9B,SAAnB,2BACSS,GADT,IACgBf,MAAOe,EAAMf,MAAMjF,KAAI,SAACkG,GAAD,OAAUA,EAAK7B,KAAOgD,EAAMhD,GAAlB,eAA4BgD,GAA5B,eAA2CnB,QAD5F,eAC6GF,MACrHI,aAAa,2BACNsG,GADK,IAERzH,MAAM,YAAKF,KAGfsB,YAAY,eAAMtB,EAAS,MA+CF4H,CAAc1L,EAAOgD,GAC9C,IAAK,iBAAkB,OApFT,SAAChD,EAAD,GAAmC,IAAzB6G,EAAwB,EAAxBA,OAAQE,EAAgB,EAAhBA,UAEpC,OAAO,2BACA/G,GADP,IAEIoH,eAAe,EACfrD,OAAQ/D,EAAM+D,OAAOhF,KAAI,SAACgG,GAAD,OAAWA,EAAM3B,KAAO2D,EAAU3D,GAAvB,eAAiC2D,GAAjC,eAAoDhC,MACxF2D,eAAe,EACf5B,SAAUD,IA6EoBF,CAAc3G,EAAOgD,GACnD,IAAK,aAAc,OAAO,2BAAKhD,GAAZ,IAAmB6C,aAAa,EAAO6F,eAAe,EAAO9J,QAAS,KACzF,IAAK,kBAAmB,OAAO,2BAAKoB,GAAZ,IAAmBoH,eAAe,IAC1D,QAAS,OAAOpH,ICtFT2L,GApBC,CACZ9I,aAAa,EACb6F,eAAe,EACftB,eAAe,EACfgC,YAAa,GACbnC,QAAQ,EACRzB,aAAc,EACd5G,QAAS,GACToF,MAAO,GACPD,OAAQ,GACRoB,aAAc,GACdC,YAAa,GACb3D,OAAQ,CACJL,aAAa,EACbC,eAAe,EACfC,eAAe,GAEnBwF,SAAU,I,6BCVR8E,GAAmBC,OAAOC,sCAAwCC,KAGzDC,GAFDC,aAAYV,GAASI,GAASC,GAAiBM,aAAgBC,MAAQD,aAAgBE,QAAmBC,SCAxHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJS,SAASC,eAAe,SAM1B3B,O","file":"static/js/main.48fa966c.chunk.js","sourcesContent":["import '../../styles/Roster.scss';\r\n\r\nconst Roster = ({ players, deletePlayer }) => {\r\n    return (\r\n        <div className=\"Roster__Wrapper\">\r\n            <h1 className=\"Roster__Header\">Player Roster</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"Roster__TableHeader\">\r\n                        <th className=\"Roster__TableHead-No\">No.</th>\r\n                        <th className=\"Roster__TableHead-Name\">Name</th>\r\n                        <th className=\"Roster__TableHead-Delete\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player, index) => (\r\n                        <tr key={index} className=\"Roster__TableData\">\r\n                            <td>{index + 1}</td>\r\n                            <td>{player}</td>\r\n                            <td className=\"Roster__TableData-deleteButtonCell\">\r\n                                <button onClick={() => deletePlayer(index)} className=\"Roster__TableData-deletebutton\">✖</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Roster;\r\n","export const loadTournaments = (data) => {\r\n\r\n    return {\r\n        type: \"LOAD_TOURNAMENTS\",\r\n        tournaments: data[0]\r\n    }\r\n}\r\nexport const tournamentLoaded = () => {\r\n    return {\r\n        type: \"TOURNAMENTS_LOADED\"\r\n    }\r\n}\r\n\r\nexport const createPlayer = (data) => {\r\n    return {\r\n        type: \"CREATE_PLAYER\",\r\n        newPlayer: data\r\n    }\r\n}\r\n\r\n\r\nexport const beginTournament = (data) => {\r\n\r\n    const tournament = data[0];\r\n    const rounds = [...data[1]];\r\n    const games = [...data[2]];\r\n    const players = [...data[3]];\r\n\r\n    const newTournament = {\r\n        id: tournament.id,\r\n        rounds: rounds.map(round => ({\r\n            ...round,\r\n            games: games.filter(game => (game.round_id === round.id)).map\r\n                (game => ({ ...game, players: players.filter(player => (player.game_id === game.id)) }))\r\n        })),\r\n        games: games.map(game => ({ ...game, players: players.filter(player => (player.game_id === game.id)) }))\r\n    }\r\n\r\n    const currentRound = newTournament.rounds[0];\r\n    const currentGame = newTournament.games[0];\r\n\r\n    return {\r\n        type: \"BEGIN_TOURNAMENT\",\r\n        tournament: { ...newTournament },\r\n        currentRound: { ...currentRound },\r\n        currentGame: { ...currentGame }\r\n    }\r\n}\r\n\r\nexport const deletePlayer = (data) => {\r\n\r\n    return {\r\n        type: \"DELETE_PLAYER\",\r\n        index: data\r\n    }\r\n}\r\n\r\nexport const updateScore = (data) => {\r\n\r\n    const player = { ...data[0] };\r\n    const adversary = { ...data[1] };\r\n    const game = { ...data[2] };\r\n\r\n    console.log(player);\r\n\r\n    return {\r\n        type: \"INCREASE_SCORE\",\r\n        player: player,\r\n        adversary: adversary,\r\n        game: game,\r\n        meta: {\r\n            debounce: {\r\n                time: 300\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const finishMatch = ({ data }) => {\r\n\r\n    return {\r\n        type: \"END_MATCH\",\r\n        match: { ...data[0] },\r\n        players: { ...data[1] },\r\n        meta: {\r\n            debounce: {\r\n                time: 300\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const finishRound = (data) => {\r\n\r\n    const currentRound = { ...data.data }\r\n\r\n    const newPlayers = makeNewGames(currentRound.games.map(game => game.players[0].won === 1 ? game.players[0] : game.players[1]));\r\n\r\n    const currentGame = currentRound.games[currentRound.games.length - 1];\r\n\r\n    return {\r\n        type: \"NEW_ROUND\",\r\n        newPlayer1s: [...newPlayers.player1s],\r\n        newPlayer2s: [...newPlayers.player2s],\r\n        currentRound: { ...currentRound },\r\n        match: { ...currentGame },\r\n        meta: {\r\n            debounce: {\r\n                time: 300\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const finishTournament = (data) => {\r\n\r\n    const champion = data[0].champion;\r\n    const lastRound = { ...data[1] };\r\n\r\n    return {\r\n        type: \"END_TOURNAMENT\",\r\n        winner: champion,\r\n        lastRound: lastRound,\r\n    }\r\n}\r\n\r\nexport const resetGame = () => {\r\n    return {\r\n        type: \"RESET_GAME\"\r\n    }\r\n}\r\n\r\nexport const disableButtons = () => {\r\n    return {\r\n        type: \"DISABLE_BUTTONS\"\r\n    }\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n\r\nconst makeNewGames = (newPlayers) => {\r\n\r\n    // Reset score and won for players moving to next round\r\n    let players = newPlayers.map((player, index) => ({ ...player, won: 0, score: 0 }))\r\n\r\n    // Slice the array of names into two halves, then create new player objects using the passed in names\r\n    let half = Math.floor(players.length / 2)\r\n    let player1s = players.slice(0, half).map(player => player.name);\r\n    let player2s = players.slice(half, players.length).map(player => player.name);\r\n\r\n    return { player1s, player2s }\r\n}","import { connect } from \"react-redux\";\r\nimport Roster from \"./Roster\";\r\nimport { deletePlayer } from \"../../data/actions/state\"\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deletePlayer: (data) => dispatch(deletePlayer(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Roster);\r\n","import '../../styles/Title.scss';\r\nimport { Component } from \"react\";\r\n\r\nclass Letter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            duration: 0,\r\n            direction: \"left\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        let direction = Math.ceil(Math.random() * (4 - 0) + 0);\r\n        const duration = Math.floor(Math.random() * (3 - 1) + 1);\r\n\r\n        if (direction === 1) {\r\n            direction = \"top\"\r\n        }\r\n        if (direction === 2) {\r\n            direction = \"right\"\r\n        }\r\n        if (direction === 3) {\r\n            direction = \"bottom\"\r\n        }\r\n        if (direction === 4) {\r\n            direction = \"left\"\r\n        }\r\n\r\n        this.setState({\r\n            duration: duration,\r\n            direction: direction\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        const { direction, duration } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <p style={{\r\n                    animation: `${direction} ${duration}s alternate 1`\r\n                }} className=\"Title__Letter\">\r\n                    {this.props.letter}\r\n                </p>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Letter;","import '../../styles/Title.scss';\r\nimport { Component } from 'react';\r\nimport Letter from './Letter';\r\n\r\nclass Title extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    // onAnimationEnd = () => {\r\n\r\n    //     const numberOfLetters = Math.floor(Math.random() * (40 - 5) + 5);\r\n\r\n    //     const newLetters = [];\r\n\r\n    //     let counter = 0;\r\n\r\n    //     while (counter < numberOfLetters) {\r\n    //         counter += 1;\r\n    //         newLetters.push(this.LettersArray[Math.floor(Math.random() * this.LettersArray.length)])\r\n    //     }\r\n\r\n    //     this.setState({\r\n    //         letters: newLetters\r\n    //     })\r\n    // };\r\n\r\n    render() {\r\n\r\n        const title = ['P', 'o', 'n', 'g', 't', 'r', 'i', 'x'];\r\n\r\n        return (\r\n            <>\r\n                <div className=\"Title__Wrapper\">\r\n                    {title.map((letter, index) => (\r\n                        <Letter key={index} letter={letter} />\r\n                    ))}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","import { connect } from \"react-redux\";\r\nimport Title from \"./Title\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Title);\r\n","import '../../styles/GameForm.scss';\r\nimport RandomNames from './randomNames.json';\r\nimport { Component } from \"react\";\r\nimport Roster from \"../Roster\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Title from '../Title';\r\n\r\nclass GameForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            playerName: \"\",\r\n            errors: { invalidName: false, tooFewPlayers: true, unevenPlayers: false }\r\n        }\r\n\r\n    }\r\n\r\n    errorTexts = {\r\n        invalidName: \"Please enter a name between 3 and 12 characters\",\r\n        tooFewPlayers: \"Please add at least 2 players to the tournament\",\r\n        unevenPlayers: \"Total player count must be a power of 2 (2, 4, 8, 16, 32 etc...)\",\r\n        tooManyPlayers: \"Pongtrix currently supports a maximum of 10 players\"\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.players !== this.props.players) {\r\n            this.validatePlayers(this.props.players)\r\n            this.setState({\r\n                playerName: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    validateName = (name) => this.setState({\r\n        errors: {\r\n            ...this.state.errors,\r\n            invalidName: name.length <= 2 || name.length >= 12\r\n        }\r\n    });\r\n\r\n    validatePlayers = (players) => this.setState({\r\n        errors: {\r\n            ...this.state.errors,\r\n            tooFewPlayers: players.length <= 1,\r\n            unevenPlayers: players.length && (players.length & (players.length - 1)) !== 0\r\n        }\r\n    });\r\n\r\n    handleNameInput = (e) => {\r\n        const nameInput = e.currentTarget.value;\r\n        this.validateName(nameInput);\r\n        this.setState({\r\n            playerName: nameInput\r\n        })\r\n    }\r\n\r\n    handlePlayerCreate = (e) => {\r\n\r\n        if (!this.state.errors.invalidName && this.state.playerName !== \"\") {\r\n            this.props.createPlayer(this.state.playerName);\r\n            this.validatePlayers(this.props.players);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.errors.tooFewPlayers &&\r\n            !this.state.errors.tooManyPlayers &&\r\n            !this.state.errors.unevenPlayers) {\r\n\r\n            this.setState({\r\n                playerName: \"\"\r\n            })\r\n\r\n            // pass up an array of player objects with name properties from the user\r\n            const rosterList = this.props.players.map((player, index) => ({\r\n                name: player,\r\n                score: 0,\r\n                won: 0\r\n            }));\r\n\r\n            this.props.startGame(rosterList);\r\n        }\r\n    }\r\n\r\n    createRandomPlayers = (e) => {\r\n        const createPlayer = this.props.createPlayer;\r\n\r\n        let counter = 0;\r\n\r\n        while (counter < 4) {\r\n            const randomIndex = Math.floor(Math.random() * RandomNames.length);\r\n            createPlayer(RandomNames[randomIndex]);\r\n            counter += 1;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { gameStarted } = this.props;\r\n        const { playerName, errors } = this.state;\r\n\r\n        return (\r\n\r\n\r\n            gameStarted ? <Redirect to=\"game\" /> :\r\n                <>\r\n                    <div className=\"pageStyle\">\r\n                        <Title />\r\n                        <form onSubmit={this.handleSubmit} action=\"\" method=\"get\" className=\"GameForm\">\r\n                            <div className=\"GameForm__Entry\">\r\n\r\n                                <label className=\"GameForm__Label\" htmlFor=\"name\">Enter player name: </label>\r\n\r\n                                <input value={playerName} onChange={this.handleNameInput} type=\"text\" className=\"GameForm__Input\" name=\"name\" id=\"name\"></input>\r\n\r\n                                <button type=\"button\" onClick={this.handlePlayerCreate} className=\"GameForm__Button\">Add Player</button>\r\n\r\n                                <button type=\"button\" onClick={this.createRandomPlayers} className=\"GameForm__Button\">Add 4 Random Players</button>\r\n\r\n                                <button type=\"submit\" className=\"GameForm__Button\">Enter the Pongtrix!</button>\r\n\r\n\r\n                                {Object.keys(errors).map((error, index) =>\r\n                                    (errors[error] ? <p key={index} className=\"GameForm__Error\">{this.errorTexts[error]}</p> : null))}\r\n                            </div>\r\n                        </form>\r\n                        <Roster />\r\n                    </div>\r\n                </>)\r\n    }\r\n}\r\n\r\nexport default GameForm;\r\n","import axios from 'axios';\r\nexport default axios.create({\r\n    baseURL: \"http://ec2-35-177-141-50.eu-west-2.compute.amazonaws.com/api\",\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        authorization: \"\",\r\n    }\r\n})","import axios from '../../axios'\r\nimport { loadTournaments, finishTournament, beginTournament, updateScore, finishMatch, finishRound } from \"./state\";\r\n\r\nexport const getTournaments = () => {\r\n\r\n    return (dispatch) => {\r\n        axios.get(\"/tournaments\").then(({ data }) => {            \r\n            dispatch(loadTournaments(data));\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGame = (players) => {\r\n\r\n    /**\r\n     * This logic is for sending information to the API to setup the game on the backend\r\n     * Following this, the backend will return the tournament, rounds, games and players it has stored\r\n     * We can then use these respective IDs to update the API as the game progresses.\r\n     * There are two sections to this function, the logic for assembling new games, and the dispatch.\r\n     */\r\n\r\n    // 1. Logic for assembling new games.\r\n\r\n    const newGames = makeNewGames(players);\r\n\r\n    // Set the first round to contain all the games.\r\n    let rounds = [{ id: 1, games: newGames, complete: false }];\r\n\r\n    //Add a round object for each of the rounds to follow.\r\n    let games = newGames.length;\r\n    let idCounter = 1;\r\n\r\n    while (games > 1) {\r\n        games = games / 2;\r\n\r\n        //Populate the round object with empty games, so we can populate the display\r\n        let newRoundGames = [];\r\n\r\n        for (let i = 0; i < games; i++) {\r\n            newRoundGames.push({\r\n                round_id: idCounter,\r\n                id: i,\r\n                player1: \"\",\r\n                player2: \"\",\r\n                deuce: 0,\r\n                service: 1,\r\n                complete: 0\r\n            })\r\n        }\r\n\r\n        idCounter += 1;\r\n\r\n        rounds.push({ id: idCounter, games: [...newRoundGames], complete: false })\r\n    }\r\n\r\n    // 2. Dispatch to API\r\n\r\n    return (dispatch) => {\r\n\r\n        // Send up our created rounds, games and associated players in JSON format\r\n        axios.post(\"/tournaments\", {\r\n            \"rounds\": { ...rounds },\r\n        }).then(({ data }) => {\r\n            dispatch(beginTournament(data));\r\n        })\r\n    }\r\n}\r\n\r\nexport const increaseScore = (data) => {\r\n\r\n    return (dispatch) => {\r\n        axios.put(`/tournaments/${data.tournamentID}/rounds/${data.roundID}/games/${data.gameID}/players/${data.playerID}`, {\r\n            ...data\r\n        }).then(({ data }) => {\r\n            dispatch(updateScore(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const completeMatch = (data) => {\r\n\r\n    return (dispatch) => {\r\n        axios.put(`/tournaments/${data.tournamentID}/rounds/${data.roundID}/games/${data.game.id}`, {\r\n            ...data.game\r\n        }).then(({ data }) => {\r\n            dispatch(finishMatch({ data }))\r\n        })\r\n    }\r\n}\r\n\r\nexport const endRound = (data) => {\r\n\r\n    return (dispatch) => {\r\n        axios.put(`/tournaments/${data.tournamentID}/rounds/${data.roundID}`, {\r\n            ...data,\r\n            currentRound: {\r\n                ...data.currentRound,\r\n                games: data.currentRound.games.map((game) => game.id === data.updatedGame.id ? { ...data.updatedGame } : { ...game })\r\n            }\r\n        }).then(({ data }) => {\r\n            dispatch(finishRound(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const endTournament = (data) => {\r\n\r\n    return (dispatch) => {\r\n        axios.put(`/tournaments/${data.tournamentID}/rounds/${data.roundID}`, {\r\n            ...data,\r\n            currentRound: {\r\n                ...data.currentRound,\r\n                games: data.currentRound.games.map((game) => game.id === data.updatedGame.id ? { ...data.updatedGame } : { ...game })\r\n            }\r\n        }).then(({ data }) => {\r\n\r\n            return axios.put(`/tournaments/${data.data.tournament_id}`, {\r\n                ...data.data\r\n            }).then(({ data }) => {\r\n                return dispatch(finishTournament(data));\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nconst makeNewGames = (newPlayers) => {\r\n\r\n    // Reset score and won for players moving to next round\r\n    let players = newPlayers.map((player, index) => ({ ...player, won: 0, score: 0 }))\r\n\r\n    // Slice the array of names into two halves, then create new player objects using the passed in names\r\n    let half = Math.floor(players.length / 2)\r\n    let player1s = players.slice(0, half);\r\n    let player2s = players.slice(half, players.length);\r\n\r\n    // Create an array of new 'game' objects that contain two player objects for each competitor\r\n    let mergedGames = player1s.map((player1, index) => ({\r\n        player1: player1,\r\n        player2: player2s[index],\r\n        deuce: 0,\r\n        service: 1,\r\n        complete: 0\r\n    }))\r\n\r\n    return mergedGames\r\n}","import { connect } from \"react-redux\";\r\nimport GameForm from \"./GameForm\";\r\nimport { createPlayer } from \"../../data/actions/state\"\r\nimport { startGame } from \"../../data/actions/api\"\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        gameStarted: state.gameStarted,\r\n        loaded: state.loaded\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createPlayer: (data) => dispatch(createPlayer(data)),\r\n        startGame: (data) => dispatch(startGame(data)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameForm);\r\n","import '../../styles/Player.scss';\r\n\r\nconst Player = ({ player, increaseScore, inputDisabled, disableButtons }) => {\r\n\r\n    const handleClick = () => {\r\n        disableButtons();\r\n        increaseScore(player);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Player__Wrapper\">\r\n            <h1>{player.name}</h1>\r\n            <p>Score</p>\r\n            <p className=\"Player__Score\">{player.score}</p>\r\n            <button disabled={inputDisabled} onClick={handleClick} className=\"Player__Button\">+</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import { connect } from \"react-redux\";\r\nimport Player from \"./Player\";\r\nimport { disableButtons } from '../../data/actions/state'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inputDisabled: state.inputDisabled\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        disableButtons: () => dispatch(disableButtons())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n","import '../../styles/Pairing.scss';\r\n\r\nconst Pairing = ({ game }) => {\r\n\r\n    const winMessages = {\r\n        0: \"--\",\r\n        1: \"WON\",\r\n        2: \"LOST\"\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <table>\r\n            <tbody>\r\n                <tr className={\r\n                    game.players[0].won === 1 ? \"pairing__player won\" :\r\n                    game.players[0].won === 2 ? \"pairing__player lost\" : \"pairing__player\"}>\r\n                    <td className=\"pairing__name\">{game.players[0].name}</td>\r\n                    <td className=\"pairing__score\">{game.players[0].score}</td>\r\n                    <td className=\"pairing__win\">{winMessages[game.players[0].won]}</td>\r\n                </tr>\r\n                <tr className={\r\n                    game.players[1].won === 1 ? \"pairing__player won\" :\r\n                    game.players[1].won === 2 ? \"pairing__player lost\" : \"pairing__player\"}>\r\n                    <td className=\"pairing__name\">{game.players[1].name}</td>\r\n                    <td className=\"pairing__score\">{game.players[1].score}</td>\r\n                    <td className=\"pairing__win\">{winMessages[game.players[1].won]}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Pairing;\r\n","import { connect } from \"react-redux\";\r\nimport Pairing from \"./Pairing\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Pairing);\r\n","import '../../styles/TournamentTree.scss';\r\nimport Pairing from '../Pairing';\r\n\r\nconst TournamentTree = ({ gameStarted, games, rounds }) => {\r\n\r\n\r\n    const roundName = (index, length) => (\r\n        index === length ? \"Final\" :\r\n            index === length - 1 ? \"Semi Finals\" :\r\n                index === length - 2 ? \"Quarter Finals\" : `Round ${index}`\r\n    )\r\n\r\n\r\n    return (\r\n        gameStarted ?\r\n            <div className=\"TournamentTree\">\r\n                {rounds.map((round, index) => (\r\n                    <div key={index} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <div className=\"PairingRow\">\r\n                            <h1 className=\"PairingRow__title\">{roundName(index + 1, rounds.length)}</h1>\r\n                            {round.games.map((game, index) => (\r\n                                <Pairing game={game} key={index} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            :\r\n            <></>\r\n    );\r\n}\r\n\r\nexport default TournamentTree;\r\n","import { connect } from \"react-redux\";\r\nimport TournamentTree from \"./TournamentTree\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        gameStarted: state.gameStarted,\r\n        games: state.games,\r\n        rounds: state.rounds\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TournamentTree);\r\n","import '../../styles/MatchBox.scss';\r\nimport Player from '../Player';\r\nimport { Component } from 'react';\r\nimport TournamentTree from '../TournamentTree/';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass MatchBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.completeMatch = this.completeMatch.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        const { disableButtons, currentGame, currentRound, tournamentID, endRound, rounds, endTournament, nextMatch, gameConcluded } = this.props;\r\n\r\n        if ((currentGame.players[0].won === 1 || currentGame.players[1].won === 1) && !gameConcluded) {\r\n\r\n            disableButtons();\r\n\r\n            const updatedGame = { ...currentGame };\r\n\r\n            currentRound.id === rounds[rounds.length - 1].id && currentGame.id === currentRound.games[currentRound.games.length - 1].id ?\r\n                endTournament({\r\n                    currentRound: currentRound,\r\n                    updatedGame: updatedGame,\r\n                    tournamentID: tournamentID,\r\n                    roundID: currentRound.id\r\n                }) :\r\n                currentGame.id === currentRound.games[currentRound.games.length - 1].id ?\r\n                    endRound({\r\n                        currentRound: currentRound,\r\n                        updatedGame: updatedGame,\r\n                        tournamentID: tournamentID,\r\n                        roundID: currentRound.id,\r\n                    }) :\r\n                    nextMatch({\r\n                        game: updatedGame,\r\n                        tournamentID: tournamentID,\r\n                        roundID: currentRound.id,\r\n                    })\r\n        }\r\n    }\r\n\r\n\r\n    completeMatch = () => {\r\n\r\n\r\n        const { currentGame, currentRound, tournamentID, endRound, rounds, endTournament, nextMatch } = this.props;\r\n\r\n        const updatedGame = { ...currentGame };\r\n        updatedGame.players[0].won = 1;\r\n        updatedGame.players[1].won = 2;\r\n\r\n        currentRound.id === rounds[rounds.length - 1].id && currentGame.id === currentRound.games[currentRound.games.length - 1].id ?\r\n            endTournament({\r\n                currentRound: currentRound,\r\n                updatedGame: updatedGame,\r\n                tournamentID: tournamentID,\r\n                roundID: currentRound.id\r\n            }) :\r\n            currentGame.id === currentRound.games[currentRound.games.length - 1].id ?\r\n                endRound({\r\n                    currentRound: currentRound,\r\n                    updatedGame: updatedGame,\r\n                    tournamentID: tournamentID,\r\n                    roundID: currentRound.id,\r\n                }) :\r\n                nextMatch({\r\n                    game: updatedGame,\r\n                    tournamentID: tournamentID,\r\n                    roundID: currentRound.id,\r\n                })\r\n    }\r\n\r\n    calculateTitle = () => {\r\n        let totalMatches = this.props.currentRound.games.length;\r\n        let currentMatch = 0;\r\n\r\n        let totalRounds = this.props.rounds.length;\r\n        let currentRoundID = 0;\r\n\r\n        this.props.rounds.forEach((round, index) => {\r\n            if (this.props.currentRound.id === round.id) {\r\n                currentRoundID = index + 1;\r\n                round.games.forEach((game, index) => {\r\n                    if (this.props.currentGame.id === game.id) {\r\n                        currentMatch = index + 1;\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        let currentRoundName = currentRoundID === totalRounds ? \"Final\" :\r\n            currentRoundID === totalRounds - 1 ? \"Semi Finals\" :\r\n                currentRoundID === totalRounds - 2 ? \"Quarter Finals\" : `Round ${currentRoundID}`\r\n\r\n        return currentRoundName === \"Final\" ?\r\n            `${currentRoundName}` :\r\n            `${currentRoundName}, Match ${currentMatch}/${totalMatches}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { increaseScore, currentGame, currentRound, tournamentID, gameConcluded } = this.props;\r\n\r\n        return (\r\n            gameConcluded ? <Redirect to=\"victory\" /> :\r\n                <div className=\"pageStyle\">\r\n                    <div className=\"MatchBox__Wrapper\">\r\n                        <h1 className=\"MatchBox__Header\">{this.calculateTitle()}</h1>\r\n                        <div className=\"MatchBox__Players\">\r\n                            <Player increaseScore={(player) => increaseScore({\r\n                                player1or2: 1,\r\n                                player: player,\r\n                                game: currentGame,\r\n                                tournamentID: tournamentID,\r\n                                roundID: currentRound.id,\r\n                                gameID: player.game_id,\r\n                                playerID: player.id,\r\n                            })} player={currentGame.players[0]} />\r\n                            <p className=\"MatchBox__Versus\">VS</p>\r\n                            <Player increaseScore={(player) => increaseScore({\r\n                                player1or2: 2,\r\n                                player: player,\r\n                                game: currentGame,\r\n                                tournamentID: tournamentID,\r\n                                roundID: currentRound.id,\r\n                                gameID: player.game_id,\r\n                                playerID: player.id,\r\n                            })} player={currentGame.players[1]} />\r\n                        </div>\r\n                        <div className=\"MatchBox__GameAlerts\">\r\n                            <p className=\"MatchBox__Alert\">{currentGame.service === 0 ? \"Service\" : \"\"}</p>\r\n                            <p className=\"MatchBox__Alert--Deuce\">{currentGame.deuce === 1 ? \"Deuce\" : \"\"}</p>\r\n                            <p className=\"MatchBox__Alert\">{currentGame.service === 1 ? \"Service\" : \"\"}</p>\r\n                        </div>\r\n                        <button className=\"MatchBox__Button\" onClick={() => this.completeMatch()}>Auto Complete Match</button>\r\n                    </div>\r\n                    <TournamentTree />\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MatchBox;\r\n","import { connect } from \"react-redux\";\r\nimport MatchBox from \"./MatchBox\";\r\nimport { increaseScore, completeMatch, endRound, endTournament } from \"../../data/actions/api\";\r\nimport { disableButtons } from \"../../data/actions/state\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tournamentID: state.tournamentID,\r\n        currentRound: state.currentRound,\r\n        currentGame: state.currentGame,\r\n        gameStarted: state.gameStarted,\r\n        gameConcluded: state.gameConcluded,\r\n        rounds: state.rounds,        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        increaseScore: (data) => dispatch(increaseScore(data)),\r\n        nextMatch: (data) => dispatch(completeMatch(data)),\r\n        endRound: (data) => dispatch(endRound(data)),\r\n        endTournament: (data) => dispatch(endTournament(data)),\r\n        disableButtons: () => dispatch(disableButtons())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchBox);\r\n","import { Redirect } from 'react-router';\r\nimport '../../styles/Victory.scss';\r\n// import TournamentTree from '../TournamentTree/';\r\n\r\nconst Victory = ({ champion, gameStarted, reset }) => {\r\n\r\n    return (\r\n        !gameStarted ? <Redirect to=\"\" /> :\r\n            <>\r\n                <div className=\"pageStyle\">\r\n\r\n                </div>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default Victory;\r\n","import { connect } from \"react-redux\";\r\nimport Victory from \"./Victory\";\r\nimport { resetGame } from \"../../data/actions/state\"\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        champion: state.champion,\r\n        gameStarted: state.gameStarted\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset: (data) => dispatch(resetGame())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Victory);","import '../../styles/FourOhFour.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FourOhFour = () => {    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"pageStyle\">\r\n                <p className=\"Error__Text\">404: Page not found</p>\r\n                <p className=\"Error__Text\">Your page is out there, Neo, and it's looking for you, and it will find you if you want it to.</p>\r\n                <Link className=\"Error__Button\" to=\"\">Go Back</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default FourOhFour;","import '../../styles/Nav.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = ({reset}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Nav__Wrapper\">\r\n                <Link onClick={() => reset()} className=\"Nav__Link\" to=\"/\">New Tournament</Link>\r\n                <Link className=\"Nav__Link\" to=\"/loadTournaments\">Tournament History</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Nav;","import { connect } from \"react-redux\";\r\nimport Nav from './Nav'\r\nimport { resetGame } from '../../data/actions/state'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset: (data) => dispatch(resetGame())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\r\n","import { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass LoadTournaments extends Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.loaded) {\r\n            this.props.handleLoad();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loaded } = this.props;\r\n        return loaded ? <Redirect to=\"tournaments\" /> : (\r\n            <div className=\"progress\">\r\n                <div\r\n                    className=\"progress-bar progress-bar-striped active\"\r\n                    style={{ width: \"100%\" }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadTournaments;","import { connect } from \"react-redux\";\r\nimport LoadTournaments from \"./LoadTournaments\";\r\nimport { getTournaments } from \"../../data/actions/api\"\r\n\r\nconst mapStateToProps = ({ loaded }) => ({\r\n    loaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoad: () => dispatch(getTournaments()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadTournaments);","import '../../styles/Tournaments.scss';\r\nimport { Component } from 'react';\r\nimport Pairing from '../Pairing';\r\n\r\nclass Tournaments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            date: \"\"\r\n        }\r\n    }\r\n\r\n    roundName = (index, length) => (\r\n        index === length ? \"Final\" :\r\n            index === length - 1 ? \"Semi Finals\" :\r\n                index === length - 2 ? \"Quarter Finals\" : `Round ${index}`\r\n    )\r\n\r\n    componentDidMount() {\r\n        this.props.tournamentLoaded();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"pageStyle\">\r\n\r\n\r\n                    {this.props.tournaments.map((tournament, tIndex) => (\r\n\r\n                        <div key={tIndex} className=\"Tournament__Wrapper\">\r\n                            <h1>Tournament {tournament.id}</h1>\r\n                            <p>{tournament.updated_at}</p>\r\n                            <div className=\"TournamentTree\">\r\n                                {tournament.rounds.map((round, index) => (\r\n                                    <div key={index} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                        <div className=\"PairingRow\">\r\n                                            <h1 className=\"PairingRow__title\">{this.roundName(index + 1, tournament.rounds.length)}</h1>\r\n                                            {round.games.map((game, index) => (\r\n                                                <Pairing game={game} key={index} />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <p>Champion: {tournament.champion}</p>\r\n                        </div>\r\n\r\n                    )\r\n                    )\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tournaments;","import { connect } from \"react-redux\";\r\nimport Tournaments from \"./Tournaments\";\r\nimport { tournamentLoaded } from \"../../data/actions/state\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tournaments: state.tournaments\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        tournamentLoaded: () => dispatch(tournamentLoaded())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tournaments);\r\n","import '../../../styles/MatrixBackground.scss';\r\nimport { Component } from \"react\";\r\n\r\nclass MatrixLetter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { animationStyle, animationSpeed, letter} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <p style={{ animation: `${animationStyle} ${animationSpeed}s alternate infinite` }} className=\"Matrix__Letter\">{letter}</p>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MatrixLetter;","import '../../../styles/MatrixBackground.scss';\r\nimport { Component } from \"react\";\r\nimport MatrixLetter from './MatrixLetter';\r\n\r\nclass MatrixLetters extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            duration: 1,\r\n            letters: []\r\n        }\r\n\r\n        this.setupLetterSpeed = this.setupLetterSpeed.bind(this);        \r\n        this.setupLetterStyle = this.setupLetterStyle.bind(this);\r\n    }\r\n\r\n    LettersArray = [\r\n        \"1\",\r\n        \"2\",\r\n        \"3\",\r\n        \"4\",\r\n        \"5\",\r\n        \"Z\",\r\n        \"X\",\r\n        \"Y\",\r\n        \"W\",\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"￥\",\r\n        \"＃\",\r\n        \"＄\",\r\n        \"＆\",\r\n        \"＠\",\r\n        \"丸\",\r\n        \"馬\",\r\n        \"雲\",\r\n        \"火\",\r\n        \"水\",\r\n        \"暗\",\r\n        \"光\",\r\n        \"木\",\r\n        \"土\",\r\n        \"氷\",\r\n        \"ア\",\r\n        \"イ\",\r\n        \"ウ\",\r\n        \"エ\",\r\n        \"オ\",\r\n        \"カ\",\r\n        \"キ\",\r\n        \"ク\",\r\n        \"ケ\",\r\n        \"コ\",\r\n        \"サ\",\r\n        \"シ\",\r\n        \"ツ\",\r\n    ]\r\n\r\n    componentDidMount = () => {\r\n\r\n        const numberOfLetters = Math.floor(Math.random() * (40 - 5) + 5);\r\n\r\n        const newLetters = [];\r\n\r\n        let counter = 0;\r\n\r\n        while (counter < numberOfLetters) {\r\n            counter += 1;\r\n            newLetters.push(this.LettersArray[Math.floor(Math.random() * this.LettersArray.length)])\r\n        }\r\n\r\n        const newDuration = Math.floor(Math.random() * (12 - 5) + 5);\r\n\r\n        let newVictoryDuration = 0;\r\n\r\n        if (this.props.type === \"victory\") {\r\n            newVictoryDuration = Math.floor(Math.random() * (5000 - 2200) + 2200);\r\n        }\r\n\r\n        this.setState({\r\n            letters: newLetters,\r\n            duration: newDuration,\r\n            victoryDuration: newVictoryDuration\r\n        })\r\n    };\r\n\r\n    onAnimationEnd = () => {\r\n\r\n        const numberOfLetters = Math.floor(Math.random() * (40 - 5) + 5);\r\n\r\n        const newLetters = [];\r\n\r\n        let counter = 0;\r\n\r\n        while (counter < numberOfLetters) {\r\n            counter += 1;\r\n            newLetters.push(this.LettersArray[Math.floor(Math.random() * this.LettersArray.length)])\r\n        }\r\n\r\n        this.setState({\r\n            letters: newLetters\r\n        })\r\n    };\r\n\r\n    setupLetterStyle = () => {\r\n        const dice = Math.floor(Math.random() * (100 - 1) + 1);\r\n\r\n        let animationStyle = dice < 10 ? 'colorChangeLight' : 'colorChangeDark';\r\n\r\n        return animationStyle\r\n    }\r\n\r\n    setupLetterSpeed = () => {\r\n        return Math.floor(Math.random() * (5 - 1) + 1);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { duration, victoryDuration, letters } = this.state\r\n\r\n        return (\r\n            this.props.type === \"victory\" ?\r\n                <>\r\n                    <div className=\"Matrix__VictoryBox\">\r\n                        <div style={{ animation: `letterFallVictory ${victoryDuration}ms linear 1 forwards` }}>\r\n                            {\r\n                                letters.map((letter, index) => (\r\n                                    <MatrixLetter key={index} animationStyle={this.setupLetterStyle()} animationSpeed={this.setupLetterSpeed()} letter={letter} />\r\n                                ))\r\n                            }\r\n                            <MatrixLetter animationStyle='colorChangeVictory' animationSpeed={this.setupLetterSpeed()} letter={this.props.letter} />\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                <>\r\n                    <div style={{ animation: `letterFall ${duration}s linear infinite` }} onAnimationEnd={this.onAnimationEnd} className=\"Matrix__LetterBox\">\r\n                        {\r\n                            letters.map((letter, index) => (\r\n                                <MatrixLetter key={index} animationStyle={this.setupLetterStyle()} animationSpeed={this.setupLetterSpeed()} letter={letter} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MatrixLetters;","import { connect } from \"react-redux\";\r\nimport MatrixLetters from \"./MatrixLetters\";\r\n\r\nconst mapStateToProps = ({ loaded }) => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MatrixLetters);","import '../../styles/MatrixBackground.scss';\r\nimport MatrixLetters from \"./MatrixLetters\";\r\nimport { Component } from \"react\";\r\n\r\nclass MatrixBackground extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // const { width } = this.state\r\n\r\n        return (\r\n            <div className=\"MatrixBackground\">\r\n                <div className=\"MatrixBackground--Victory\">\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    {this.props.gameConcluded ?\r\n                        <div className=\"MatrixBackground__VictorySegment\">\r\n                            {this.props.champion.split(\"\").map((letter, index) => (\r\n                                <MatrixLetters key={index} letter={letter} type=\"victory\" />\r\n                            ))}\r\n                            <MatrixLetters letter=\"-\" type=\"victory\" />\r\n                            <MatrixLetters letter=\"W\" type=\"victory\" />\r\n                            <MatrixLetters letter=\"i\" type=\"victory\" />\r\n                            <MatrixLetters letter=\"n\" type=\"victory\" />\r\n                            <MatrixLetters letter=\"s\" type=\"victory\" />\r\n                            <MatrixLetters letter=\"!\" type=\"victory\" />\r\n                        </div> : null\r\n                    }\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                    <MatrixLetters />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MatrixBackground;","import { connect } from \"react-redux\";\r\nimport MatrixBackground from \"./MatrixBackground\";\r\n\r\nconst mapStateToProps = (state) => ({    \r\n    gameConcluded: state.gameConcluded,\r\n    loaded: state.loaded,\r\n    champion: state.champion\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({    \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MatrixBackground);","import '../../styles/App.scss';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport GameForm from '../GameForm';\r\nimport MatchBox from '../MatchBox';\r\nimport Victory from '../Victory';\r\nimport FourOhFour from '../FourOhFour/FourOhFour';\r\nimport Nav from '../Nav';\r\nimport LoadTournaments from '../LoadTournaments/';\r\nimport Tournaments from '../Tournaments/';\r\nimport MatrixBackground from '../MatrixBackground/';\r\n\r\nconst App = ({ gameConcluded, gameStarted }) => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Nav />\r\n        <MatrixBackground />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={GameForm}></Route>\r\n          <Route exact path=\"/game\" component={MatchBox}></Route>\r\n          <Route exact path=\"/victory\" component={Victory}></Route>\r\n          <Route exact path=\"/loadTournaments\" component={LoadTournaments}></Route>\r\n          <Route exact path=\"/tournaments\" component={Tournaments}></Route>\r\n          <FourOhFour />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        gameConcluded: state.gameConcluded,\r\n        gameStarted: state.gameStarted\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const increaseScore = (state, action) => {\r\n\r\n    action.game.players = [...state.currentGame.players.map((player) => player.id === action.player.id ? { ...action.player } : { ...action.adversary })];\r\n\r\n    return {\r\n        ...state,\r\n        inputDisabled: false,\r\n        rounds: state.rounds.map((round) =>\r\n            round.id === state.currentRound.id ? {\r\n                ...state.currentRound,\r\n                games: round.games.map((game) => game.id === action.game.id ?\r\n                    { ...action.game } : { ...game })\r\n            } : { ...round }),\r\n        currentGame: {\r\n            ...action.game,\r\n        },\r\n    }\r\n}\r\n\r\nconst endTournament = (state, { winner, lastRound }) => {\r\n\r\n    return {\r\n        ...state,\r\n        inputDisabled: false,\r\n        rounds: state.rounds.map((round) => round.id === lastRound.id ? { ...lastRound } : { ...round }),\r\n        gameConcluded: true,\r\n        champion: winner\r\n    }\r\n}\r\n\r\nconst setupNewRound = (state, { newPlayer1s, newPlayer2s, currentRound, match }) => {\r\n\r\n    const nextRound = state.rounds.filter((round, index) => round.id === currentRound.id + 1)[0];\r\n\r\n\r\n    const newGames = nextRound.games.map((game, index) => {\r\n        const players = [...game.players];\r\n        players[0].name = newPlayer1s[index];\r\n        players[1].name = newPlayer2s[index];\r\n        return { ...game, players: players }\r\n    })\r\n\r\n    return {\r\n        ...state,\r\n        inputDisabled: false,\r\n        rounds: state.rounds.map((round) =>\r\n            round.id === nextRound.id ?\r\n                { ...nextRound, games: [...newGames] } :\r\n                round.id === match.round_id ?\r\n                    { ...round, games: round.games.map((game) => game.id === match.id ? { ...match } : { ...game }) } : { ...round }),\r\n        currentRound: {\r\n            ...nextRound,\r\n            games: [...newGames]\r\n        },\r\n        // This is the problem, sets the game to have \"\" players...\r\n        currentGame: { ...newGames[0] }\r\n    }\r\n}\r\n\r\nconst startNewMatch = (state, { match, players }) => {\r\n\r\n    return {\r\n        ...state,\r\n        inputDisabled: false,\r\n        rounds: state.rounds.map((round) => round.id === match.round_id ?\r\n            {\r\n                ...round, games: round.games.map((game) => game.id === match.id ? {\r\n                    ...match,\r\n                    players: { ...players }\r\n                } : { ...game })\r\n            }\r\n            : { ...round }),\r\n        currentGame: state.currentRound.games.filter((game) => game.id === match.id + 1)[0],\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_TOURNAMENTS\": return {\r\n            ...state,\r\n            loaded: true,\r\n            tournaments: action.tournaments\r\n        };\r\n        case \"TOURNAMENTS_LOADED\": return {...state, loaded: false};\r\n        case \"CREATE_PLAYER\": return {\r\n            ...state,\r\n            players: [...state.players, action.newPlayer]\r\n        };\r\n        case \"DELETE_PLAYER\": return {\r\n            ...state,\r\n            players: state.players.filter((player, i) => action.index !== i)\r\n        };\r\n        case \"BEGIN_TOURNAMENT\": return {\r\n            ...state,\r\n            gameStarted: true,\r\n            tournamentID: action.tournament.id,\r\n            rounds: action.tournament.rounds,\r\n            currentRound: action.currentRound,\r\n            currentGame: action.currentGame\r\n        };\r\n        case \"INCREASE_SCORE\": return increaseScore(state, action);\r\n        case \"END_MATCH\": return startNewMatch(state, action);\r\n        case \"NEW_ROUND\": return setupNewRound(state, action);\r\n        case \"END_TOURNAMENT\": return endTournament(state, action);\r\n        case \"RESET_GAME\": return { ...state, gameStarted: false, gameConcluded: false, players: [] };\r\n        case \"DISABLE_BUTTONS\": return { ...state, inputDisabled: true };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer","const initial = {\r\n    gameStarted: false,\r\n    gameConcluded: false,\r\n    inputDisabled: false,\r\n    tournaments: [],\r\n    loaded: false,\r\n    tournamentID: 0,\r\n    players: [],\r\n    games: [],\r\n    rounds: [],\r\n    currentRound: {},\r\n    currentGame: {},\r\n    errors: {\r\n        invalidName: false,\r\n        tooFewPlayers: false,\r\n        unevenPlayers: false\r\n    },\r\n    champion: \"\"\r\n}\r\n\r\nexport default initial","import { createStore, compose, applyMiddleware } from \"redux\"\r\nimport createDebounce from 'redux-debounced';\r\nimport reducer from \"./reducers\"\r\nimport initial from \"./initial\"\r\nimport thunk from \"redux-thunk\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initial, composeEnhancers(applyMiddleware(thunk), applyMiddleware(createDebounce()), persistState()));\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./data/store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}